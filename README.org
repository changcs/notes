* Changcs 的 Notes
一些個人的筆記。

#+BEGIN_QUOTE
測試引用一。

測試引用二， *粗體字測試，使用OK。* 以後再更新。

  -- [[https://github.com/changcs][changcs]] [[file:pic/author.jpg]]
#+END_QUOTE


* Working with Gentoo

** Synchronization

#+BEGIN_QUOTE
emerge --ask --verbose --update --deep --with-bdeps=y --newuse @world
#+END_QUOTE

** Add user into groups

From [[https://wiki.gentoo.org/wiki/Knowledge_Base:Adding_a_user_to_a_group][Adding a user to a group - Gentoo Wiki]]

#+BEGIN_QUOTE
root # gpasswd -a larry wheel
#+END_QUOTE

** Layman and overlay

1. Install ~layman~ by

#+BEGIN_QUOTE
USE="git" emerge -av app-portage/layman

layman -L
#+END_QUOTE

2. [@2] ~git clone~ my gentoo-zh overlay into ~git-home~ by

#+BEGIN_QUOTE
git clone https://github.com/changcs/gentoo-zh.git gentoo-zh.git
#+END_QUOTE

3. [@3] Apply ~temp gentoo-zh2~ stash

4. Add my ~gentoo-zh~ overlay

#+BEGIN_QUOTE
layman -o file:///home/changcs/git-home/gentoo-zh.git/repo.xml -f -a gentoo-zh2
#+END_QUOTE

** Enable X Forwarding Over SSH

From [[http://linuxg.net/how-to-enable-x-forwarding-over-ssh-on-gentoo-server/][How to Enable X Forwarding Over SSH on Gentoo Server]].
Enable ~X11Forwarding~ in ~/etc/ssh/sshd_config~

#+BEGIN_QUOTE
X11Forwarding yes
/etc/init.d/sshd reload
#+END_QUOTE


* 在 Beaglebone Black上測試openocd

步驟如下

** Clone openocd (正在試commit  cb317eabf2d162365467aeb89b564828e5e6d6f3)

#+BEGIN_QUOTE
git clone git://git.code.sf.net/p/openocd/code openocd-code.git
#+END_QUOTE

** Building openocd

1. run =./bootstrap=

2. run =./configure --help=

3. run =./configure --enable-jlink=

4. run =make=

** Hooking up the JTAG Adapter

1. connect Jlink JTAG cable to DUT

2. connect Jlink to PC with USB cable. You can use =lsusb= command to check.

3. power on the target board.

4. run =openocd=

#+BEGIN_QUOTE
cd tcl;

../src/openocd -f interface/jlink.cfg -f board/ti_beaglebone_black.cfg -c "init; halt"
#+END_QUOTE

** Talk with the OpenOCD server using telnet

Test via telnet interface and use =reg= command to display registers

#+BEGIN_QUOTE
$ telnet 127.0.0.1 4444
#+END_QUOTE

** Building U-Boot

若要進行 =JTAG= 除錯, 需要從 =u-boot= 關掉 =watchdog timer= 。 方法如下: 找出 =ti_am335x_common.h= 裏面 =WATCHDOG= 的 =define= ，改為 =undef= 。

#+BEGIN_QUOTE
make am335x_boneblack_defconfig

ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- make
#+END_QUOTE

** 製作 U-Boot 的 SD 啟動卡 方法一

劃分一個 vfat partition 在 2048 sector 處，長度 128MB。
並設定成 bootable partition 。

#+BEGIN_QUOTE
 mkfs.vfat -F 32 -n boot /dev/sdX1

 mount /dev/sdX1 /mnt

 cp MLO u-boot.img /mnt

 umount /mnt
#+END_QUOTE

** 製作 U-Boot 的 SD 啟動卡 方法二

這是 Arch Linux 建議的方法。

#+BEGIN_QUOTE
 dd if=/dev/zero of=/dev/sdX bs=1M count=8

 fdisk to create an empty partition table and a ext4 FS after 2048 sectors

 dd if=MLO of=/dev/sdX count=1 seek=1 conv=notrunc bs=128k

 dd if=u-boot.img of=/dev/sdX count=2 seek=1 conv=notrunc bs=384k
#+END_QUOTE

** 安裝 Arch Linux

參考 [[https://archlinuxarm.org/platforms/armv7/ti/beaglebone-black][BeagleBone Black | Arch Linux ARM]]。

** [[http://github.com/beagleboard/linux][Getting kernel source code]]

- 若要使用 JTAG debug linux kernel，要加上[[https://github.com/maximeh/buildroot/blob/master/board/beaglebone/patches/linux/0001-keep-jtag-clock-alive-for-debugger.patch][patch]]。

- 確定開啟 =CONFIG_DEBUG_INFO=

#+BEGIN_QUOTE
git clone git://github.com/beagleboard/linux.git

cd linux

git checkout 4.4

make V=1 distclean

make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- V=1 bb.org_defconfig

make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- V=1 zImage dtbs modules

make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- INSTALL_MOD_PATH=/new/prefix modules_install
#+END_QUOTE

假設 TFTP server 的 IP 是 192.168.1.1。
把 =arch/arm/boot/zImage= 和 =arch/arm/boot/dts/am335x-boneblack.dtb= 放到
TFTP directory 之後，接上網路線，用以下 =u-boot= 命令開機。

#+BEGIN_QUOTE
dhcp ${loadaddr} 192.168.1.1:zImage

tftpboot ${fdtaddr} 192.168.1.1:am335x-boneblack.dtb

setenv bootargs "console=ttyO0,115200n8 coherent_pool=1M root=/dev/mmcblk1p1 rw rootwait fixrtc"

bootz $loadaddr - $fdtaddr
#+END_QUOTE

** Talk with the OpenOCD server using gdb

建議使用 =emacs= 的 =gud-gdb mode= 。接下來可以使用 =step= , =next= , =until= 這些命令來除錯。

要看目前的 =call stack= , 可以使用 =info stack= 或是 =frame= 命令。

#+BEGIN_QUOTE
$ arm-none-eabi-gdb --fullname vmlinux

(gdb) target extended-remote :3334

(gdb) hbreak start_kernel

(gdb) continue

u-boot> dhcp ${loadaddr} 192.168.1.1:zImage

u-boot> tftpboot ${fdtaddr} 192.168.1.1:am335x-boneblack.dtb

u-boot> setenv bootargs "console=ttyO0,115200n8 coherent_pool=1M root=/dev/mmcblk1p1 rw rootwait fixrtc"

u-boot> bootz $loadaddr - $fdtaddr
#+END_QUOTE


** 參考資料

- [[http://jexbat.com/2016/BBB-Uboot/][BeagleBone Black 从零到一 2 MLO、U-Boot]]
- [[http://www.twam.info/hardware/beaglebone-black/u-boot-on-beaglebone-black][U-Boot on BeagleBone Black]]
- [[http://processors.wiki.ti.com/index.php/AM335x_U-Boot_User's_Guide#U-Boot][AM335x U-Boot User's Guide]]
- [[http://jexbat.com/2016/BBB-Prepare-booting/][BeagleBone Black 从零到一 (3 Linux 镜像、initramfs、Device Tree及根文件系统)]]
- [[http://elinux.org/Beagleboard:BeagleBoneBlack_Rebuilding_Software_Image][Beagleboard:BeagleBoneBlack Rebuilding Software Image]]
- [[https://archlinuxarm.org/platforms/armv7/ti/beaglebone-black][BeagleBone Black | Arch Linux ARM]]
